<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="member">
	<select id="memberList" resultType="kr.spring.tiles.member.model.dto.MemberVO">
		SELECT 
		  id, 
		  name,
		 email,
		 reg_dt
		FROM member
		ORDER BY Id
	</select>
	<!-- 02. 회원 등록 -->
	<insert id="insertMember">
		INSERT INTO member
			(level, reg_dt, id, pw,pw_dt,name,
			gender,birth,tel,email,
			zip,addr,bike_yn,bike_type,
			how_many,club_yn,join_root)
		VALUES 
			('a', now(), #{id}, #{pw},now(),#{name},
			#{gender},#{birth},#{tel},#{email},
			#{postcode},#{address},#{bike_yn},#{bike_type},
			#{how_many},#{club_yn},#{join_root})	
	</insert>
	<!-- 03. 회원정보 상세조회 -->
	<select id="viewMember" resultType="kr.spring.tiles.member.model.dto.MemberVO">
		SELECT 
		  id, 
		  name,
		  email,
		  reg_dt as userRegdate,
		  pw_dt as userUpdatedate,
		  tel,
		  zip as postcode,
		  addr as address,
		  pw,
		  birth
		
		FROM member
		WHERE id = #{id}
	</select>
	
	<!-- 04. 회원정보 수정처리 -->
	<update id="updateMember">
		UPDATE member
		SET
			pw = #{pw},
			pw_dt = now()
		WHERE
			email = #{email}	
	</update>
	
	<!-- 05. 회원정보 삭제 처리 
	<delete id="deleteMember">
		DELETE FROM tbl_member
		WHERE userId = #{userId}
	</delete>-->
	
	<!-- 06. 비밀번호 체크 -->
	<select id="checkPw" resultType="int">
		SELECT 
			COUNT(*) 
		FROM member
		WHERE id = #{id} AND pw = #{pw}
	</select>
	
	<!-- 07. 로그인처리 -->
	<select id="loginCheck" resultType="String">
        SELECT name FROM member
        WHERE id = #{id} AND pw = #{pw}
    </select>
    
    <!-- 08. 아이디중복체크 -->
    <select id="idcheck" resultType="String">
    	SELECT id from member
    	WHERE id = #{id,jdbcType=VARCHAR}
    </select>
    
    <!--09. 이메일중복체크  -->
    <select id="emailCheck" resultType="int">
    	SELECT COUNT(*) from member
    	where email = #{email}
    </select>
    
</mapper>
